import { useEffect } from "react";
import { useSearchFormContext } from "@/components/context/SearchFormContext";
import { SearchFormProvider } from "@/components/context/SearchFormContext";
import { UserDatabaseProvider } from "@/components/context/UserDatabaseContext";
import { Tabs } from "expo-router";
import React from "react";
import { Platform, Text } from "react-native";
import { useSafeAreaInsets } from "react-native-safe-area-context";
import { HapticTab } from "@/components/ui/HapticTab";
import TabBarBackground from "@/components/ui/TabBarBackground";
import { usePathname } from "expo-router";
import { Svg, Path, Circle, Rect } from "react-native-svg";

import { theme } from "@/style/ui/Theme";
import styles from "@/style/ui/TabBarStyles";

// Inline SVG icon components
const HomeIcon = ({ color }: { color: string }) => (
  <Svg
    width={styles.icon.width}
    height={styles.icon.height}
    viewBox="0 0 470.82 470.82"
  >
    <Circle
      cx="235.41"
      cy="235.41"
      r="235.41"
      fill={color}
    />
    <Path d="M429.09,279.94l-.37-.7c-2.07-3.55-5.56-6.15-9.57-7.13-4.02-.98-8.32-.27-11.8,1.94l-.2,.13c-101.98,68.16-239.04,68.36-341.13,.51-6.74-4.86-15.67-3.76-20.89,2.64-5.3,6.49-4.53,15.58,1.77,21.15l.68,.55c2.95,2.18,5.95,4.3,8.98,6.37,6.38,30.17,21.81,58.05,45.35,81.58,26.87,26.86,62.53,45.82,100.43,53.4,10.51,2.25,21.47,3.39,32.59,3.39,37.08,0,76.03-12.86,109.67-36.22,33.69-23.42,57.98-55.86,68.39-91.32,.96-3.24,1.81-6.54,2.56-9.88,1.38-.91,2.71-1.83,3.95-2.78,12.72-9.63,12.23-18.17,9.59-23.64Zm-182.17,79.15c12.45-.04,24.98-.94,37.53-2.7v43.83c-12.47,4.27-25.07,6.96-37.53,8.01v-49.14Zm-114.81-16.16c11.06,3.74,22.37,6.88,33.87,9.41v40.32c-12.32-5.51-23.69-12.22-33.87-20.04v-29.69Zm-39.1-16.2c5.82,2.89,11.75,5.59,17.76,8.12v17.77c-6.92-7.94-12.89-16.59-17.76-25.88Zm116.14,79.41c-7.5-1.45-14.78-3.28-21.84-5.47v-44.41c12.57,1.83,25.39,2.76,38.27,2.8v49.32c-5.51-.4-10.96-1.13-16.32-2.23l-.11-.02Zm96.64-14.83v-38.72c11.26-2.44,22.48-5.56,33.63-9.33v26.83c-.72,.56-1.44,1.13-2.18,1.68-10.12,7.67-20.67,14.2-31.45,19.55Zm54.97-40.68v-15.46c5.93-2.49,11.83-5.16,17.69-8.03-4.95,8.31-10.88,16.13-17.69,23.49Z" />
    <Rect
      x="173.28"
      y="218.57"
      width="125.2"
      height="27.9"
    />
    <Path
      d="M148.79,266.15c-16.53,0-33.55-4.21-47.92-11.85-15.4-8.2-27.17-19.89-34.02-33.83-7.08-14.41-8.84-30.82-5.24-48.78,3.64-18.16,12.73-37.58,27.06-57.84,3.58,8.97,10.18,22.84,21.54,39.01,16.37,23.32,46.57,56.63,98.26,84.92-11.27,17.83-33.07,28.33-59.55,28.37h-.13Z"
      fill={color}
    />
    <Path d="M88.68,163.93c.62,.9,1.24,1.81,1.89,2.72,14.27,20.33,38.11,47.59,75.58,73.29-5.25,1.45-11.08,2.2-17.26,2.21h-.1c-12.49,0-25.84-3.3-36.64-9.04-10.93-5.81-19.14-13.85-23.75-23.23-4.76-9.68-5.82-20.63-3.25-33.47,.81-4.02,1.99-8.19,3.53-12.49m1.96-80.78c-2.62,0-5.15,.55-7.53,1.65-2.66,1.22-5.01,3.1-6.79,5.42-20.46,26.45-33.32,52.28-38.23,76.75-4.67,23.27-2.24,44.83,7.23,64.09,9.09,18.48,24.4,33.85,44.28,44.43,17.77,9.46,38.79,14.67,59.19,14.67h.17c38.24-.06,69.59-17.57,83.87-46.84,4.31-8.83,.87-19.33-7.83-23.9-50.72-26.65-79.74-58.4-95.14-80.34-16.04-22.85-21.04-39.81-21.59-41.84-.6-2.64-1.79-5.14-3.48-7.26-3.45-4.34-8.6-6.82-14.14-6.82h0Z" />
    <Path
      d="M321.86,266.15c-26.44-.04-48.24-10.54-59.51-28.37,51.68-28.29,81.89-61.6,98.26-84.92,11.35-16.17,17.95-30.03,21.53-39.01,14.34,20.29,23.42,39.69,27.06,57.84,3.6,17.96,1.84,34.37-5.24,48.78-6.85,13.93-18.61,25.63-34.01,33.83-14.37,7.64-31.38,11.85-47.92,11.85h-.17Z"
      fill={color}
    />
    <Path d="M382.14,163.93c1.54,4.3,2.73,8.47,3.53,12.49,2.58,12.84,1.51,23.78-3.25,33.47-4.61,9.38-12.83,17.41-23.75,23.23-10.8,5.75-24.15,9.04-36.64,9.04h-.1c-6.19,0-12.01-.76-17.26-2.21,37.47-25.7,61.31-52.96,75.58-73.29,.64-.91,1.27-1.82,1.89-2.72m-1.96-80.78c-5.54,0-10.69,2.49-14.14,6.82-1.68,2.12-2.88,4.62-3.48,7.26-.56,2.02-5.55,18.99-21.59,41.84-15.41,21.94-44.42,53.7-95.14,80.34-8.7,4.57-12.14,15.07-7.83,23.9,14.28,29.27,45.63,46.78,83.87,46.84h.17c20.39,0,41.42-5.21,59.19-14.67,19.88-10.58,35.19-25.94,44.28-44.43,9.47-19.26,11.9-40.82,7.23-64.09-4.91-24.48-17.77-50.3-38.23-76.75-1.78-2.32-4.13-4.2-6.79-5.42-2.38-1.09-4.92-1.65-7.53-1.65h0Z" />
  </Svg>
);

const DeckBuilderIcon = ({ color }: { color: string }) => (
  <Svg
    width={styles.icon.width}
    height={styles.icon.height}
    viewBox="0 0 429.45 467.95"
  >
    <Path
      d="M425.94,176.16c-1.25-6.89-6.57-12.35-13.42-13.74l-23.88-4.96c-2.86-8.65-6.36-17.09-10.46-25.25,0,.04,13.4-20.35,13.4-20.35,3.84-5.86,3.74-13.46-.24-19.22-14.75-21.32-33.22-39.81-54.56-54.54-5.73-3.99-13.33-4.08-19.2-.26l-20.4,13.42c-8.12-4.1-16.55-7.6-25.23-10.46l-4.94-23.9c-1.4-6.83-6.85-12.15-13.74-13.4-25.51-4.68-51.64-4.68-77.12,0-6.91,1.25-12.35,6.57-13.74,13.4l-4.96,23.9c-8.65,2.86-17.11,6.36-25.25,10.46,.02,0-20.35-13.42-20.35-13.42-5.86-3.82-13.46-3.74-19.22,.26-21.32,14.73-39.81,33.22-54.54,54.54-3.99,5.75-4.08,13.36-.26,19.22l13.4,20.4c-4.1,8.12-7.58,16.55-10.43,25.21l-23.9,4.96c-6.83,1.4-12.15,6.85-13.4,13.74-4.68,25.49-4.68,51.64,0,77.12,1.25,6.89,6.57,12.35,13.4,13.74l23.9,4.96c2.86,8.65,6.33,17.09,10.43,25.25,0-.04-13.4,20.35-13.4,20.35-3.82,5.86-3.74,13.46,.26,19.22,14.73,21.32,33.22,39.81,54.54,54.54,5.69,3.95,13.18,4.08,19.02,.34h0v-53.18c-16.76-14.99-30.22-33.59-39.18-54.57-10.73-21.41-16.78-45.58-16.78-71.16,0-87.83,71.2-159.03,159.03-159.03s159.03,71.2,159.03,159.03c0,25.61-6.06,49.8-16.82,71.23-8.96,20.95-22.42,39.52-39.17,54.5v53.18c5.84,3.74,13.36,3.61,19.02-.34,21.34-14.73,39.81-33.22,54.56-54.54,3.97-5.75,4.08-13.36,.24-19.22l-13.4-20.4c4.1-8.12,7.6-16.55,10.46-25.21l23.88-4.96c6.85-1.4,12.17-6.85,13.42-13.74,4.68-25.49,4.68-51.64,0-77.12Z"
      fill={color}
    />
    <Path
      d="M256.69,127.51c31.39,11.82,42.9,43.74,42.9,81.26,0,29.24-21.7,55.12-42.65,70.69v151.56c0,20.4-15.51,36.93-34.68,36.93h-15.09c-19.15,0-34.65-16.53-34.65-36.93v-151.56c-20.94-15.57-42.66-41.45-42.66-70.69,0-37.51,9.52-69.44,40.91-81.26,3.54-1.34,5.45-.77,8.53,1.54,3.06,2.31,4.88,6.06,4.88,10.06v76.95l30.55,13.63,30.54-13.63v-76.95c0-4,1.82-7.76,4.89-10.06,3.06-2.31,4.99-2.88,8.53-1.54h-2Z"
      fill={color}
    />
  </Svg>
);

const AdvSearchIcon = ({ color }: { color: string }) => (
  <Svg
    width={styles.icon.width}
    height={styles.icon.height}
    viewBox="0 0 474.06 473.43"
    fill="none"
  >
    <Path
      d="M375.56,299.28c43.28-76.64,32.55-175.52-32.55-240.45-78.64-78.64-205.7-78.22-283.93,0-78.64,78.64-78.83,205.51-.2,284.12,65.13,64.94,163.81,75.64,240.45,32.36,35.31,37.54,59.67,63.21,70.98,74.53,26.6,26.6,59.67,33.27,86.27,6.67,26.78-26.78,21.12-56.03-5.68-82.63"
      fill={color}
    />
    <Path
      d="M200.33,141.82c28.19,.06,52.67,19.42,59.23,46.83h96.67c-7.72-86.1-83.79-149.64-169.89-141.92C110.94,53.5,51.18,113.26,44.42,188.66h96.67c6.56-27.41,31.04-46.77,59.23-46.83Z"
      fill="#000"
    />
    <Path
      d="M200.33,263.54c-28.2-.04-52.69-19.41-59.23-46.83H44.42c7.72,86.1,83.79,149.64,169.89,141.92,75.4-6.76,135.16-66.52,141.92-141.92h-96.67c-6.54,27.43-31.03,46.79-59.23,46.83Z"
      fill="#000"
    />
    <Path
      d="M167.52,202.68c0,18.12,14.69,32.81,32.81,32.81s32.81-14.69,32.81-32.81-14.69-32.81-32.81-32.81c-18.11,.03-32.77,14.7-32.81,32.81Z"
      fill="#000"
    />
  </Svg>
);

const FreeSearchIcon = ({ color }: { color: string }) => (
  <Svg
    width={styles.icon.width}
    height={styles.icon.height}
    viewBox="0 0 474.06 473.43"
    fill="none"
  >
    <Path
      d="M375.56,299.28c43.28-76.64,32.55-175.52-32.55-240.45-78.64-78.64-205.7-78.22-283.93,0s-78.83,205.51-.2,284.12c65.13,64.94,163.81,75.64,240.45,32.36,35.31,37.54,59.67,63.21,70.98,74.53,26.6,26.6,59.67,33.27,86.27,6.67,26.78-26.78,21.12-56.03-5.68-82.63"
      fill={color}
    />
    <Path
      d="M202.5,41.09c86.09,0,155.91,69.82,155.91,155.91s-69.82,155.91-155.91,155.91S46.59,283.09,46.59,197c0-86.09,69.82-155.91,155.91-155.91Z"
      fill="#000"
    />
    <Path
      d="M106.36,151.85v-35.12H245.9v35.12h-48.29v125.42h-42.96v-125.42h-48.29Z"
      fill={color}
    />
    <Path
      d="M205.61,191.86v-23.41h93.02v23.41h-32.19v83.62h-28.64v-83.62h-32.19Z"
      fill={color}
    />
  </Svg>
);

function SearchFormContextWatcher() {
  const pathname = usePathname();
  const { setLastSearchPage } = useSearchFormContext();
  useEffect(() => {
    if (pathname === "searchresult") {
      setLastSearchPage(null);
    }
  }, [pathname, setLastSearchPage]);
  return null;
}

export default function TabLayout() {
  const insets = useSafeAreaInsets();
  return (
    <UserDatabaseProvider>
      <SearchFormProvider>
        <SearchFormContextWatcher />
        <Tabs
          screenOptions={{
            tabBarInactiveTintColor: theme.colors.text,
            tabBarActiveTintColor: theme.colors.textHilight,
            headerShown: false,
            tabBarButton: HapticTab,
            tabBarBackground: TabBarBackground,
            tabBarStyle: Platform.select({
              android: {
                backgroundColor: theme.colors.black,
                borderTopWidth: 0,
                height: styles.tabBarContainer.height + insets.bottom,
                paddingHorizontal: theme.padding.small,
                paddingTop: 4,
                paddingBottom: insets.bottom,
              },
              default: {
                backgroundColor: theme.colors.black,
                borderTopWidth: 0,
                height: styles.tabBarContainer.height + insets.bottom,
                paddingHorizontal: theme.padding.small,
                paddingTop: 4,
              },
            }),
          }}
        >
          <Tabs.Screen
            name="index"
            options={{
              tabBarLabel: ({ color }) => <Text style={[styles.label, { color }]}>Home</Text>,
              tabBarIcon: ({ color }) => <HomeIcon color={color} />,
            }}
          />
          <Tabs.Screen
            name="deckbuilder"
            options={{
              tabBarLabel: ({ color }) => <Text style={[styles.label, { color }]}>Deck Builder</Text>,
              tabBarIcon: ({ color }) => <DeckBuilderIcon color={color} />,
            }}
          />
          <Tabs.Screen
            name="advancedsearch"
            options={{
              tabBarLabel: ({ color }) => <Text style={[styles.label, { color }]}>Advanced Search</Text>,
              tabBarIcon: ({ color }) => <AdvSearchIcon color={color} />,
            }}
          />
          <Tabs.Screen
            name="freesearch"
            options={{
              tabBarLabel: ({ color }) => <Text style={[styles.label, { color }]}>Free Search</Text>,
              tabBarIcon: ({ color }) => <FreeSearchIcon color={color} />,
            }}
          />
          <Tabs.Screen
            name="cards"
            options={{
              href: null,
            }}
          />
          <Tabs.Screen
            name="decks"
            options={{
              href: null,
            }}
          />
          <Tabs.Screen
            name="watchlistst"
            options={{
              href: null,
            }}
          />
        </Tabs>
      </SearchFormProvider>
    </UserDatabaseProvider>
  );
}
